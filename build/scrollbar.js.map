{"version":3,"file":"scrollbar.js","mappings":";;;;;;;;;;;;;;;;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAGA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAIA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGiE;AAE1D,MAAMI,YAAY,GAAGA,CACxBC,OAAO,GAAG,IAAI,EACdC,QAAQ,GAAG,IAAI,EACfC,eAAe,GAAG,KAAK,EACvBC,eAAe,GAAG,EAAE,EACpBC,WAAW,GAAG,EAAE,KACf;EACD,MAAM,CAACC,QAAQ,EA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","sources":["webpack://plugin-slug/./src/hooks/useScrollbar.js","webpack://plugin-slug/./src/utils/function.js","webpack://plugin-slug/./src/scrollbar/style.scss","webpack://plugin-slug/../plugin-slug/node_modules/react-dom/client.js","webpack://plugin-slug/external window \"React\"","webpack://plugin-slug/external window \"ReactDOM\"","webpack://plugin-slug/webpack/bootstrap","webpack://plugin-slug/webpack/runtime/compat get default export","webpack://plugin-slug/webpack/runtime/define property getters","webpack://plugin-slug/webpack/runtime/hasOwnProperty shorthand","webpack://plugin-slug/webpack/runtime/make namespace object","webpack://plugin-slug/./src/scrollbar/scrollbar.js"],"sourcesContent":["// import { useCallback, useEffect, useRef, useState } from \"react\";\r\n\r\n// export const useScrollbar = (railRef = null, thumbRef = null, isShowScrollbar = false, mouseScrollStep = 40, scrollSpeed = 60) => {\r\n//     const isClick = true, isDrag = true;\r\n//     const [isActive, setIsActive] = useState(false);\r\n//     const startY = useRef(0);\r\n//     const startScrollTop = useRef(0);\r\n//     const [isDragging, setIsDragging] = useState(false);\r\n//     const [thumbHeight, setThumbHeight] = useState(\"\");\r\n//     const [thumbPosition, setThumbPosition] = useState(0);\r\n//     const [isLoading, setIsLoading] = useState(true);\r\n//     const [isWheel, setIsWheel] = useState(true);\r\n//     const animationFrameId = useRef();\r\n//     const targetScroll = useRef(0);\r\n//     const currentScroll = useRef(0);\r\n//     const isScrolling = useRef(false);\r\n\r\n//     const html = document.documentElement;\r\n\r\n\r\n//     const animate = useCallback(() => {\r\n//         if (isScrolling.current) {\r\n//             const difference = targetScroll.current - currentScroll.current;\r\n//             currentScroll.current += difference / (scrollSpeed / 10);\r\n\r\n//             window.scrollTo(0, currentScroll.current);\r\n\r\n//             if (Math.abs(difference) < 0.5) {\r\n//                 currentScroll.current = targetScroll.current;\r\n//                 window.scrollTo(0, currentScroll.current);\r\n//                 isScrolling.current = false;\r\n//             }\r\n//         }\r\n\r\n//         animationFrameId.current = requestAnimationFrame(animate);\r\n//     }, [scrollSpeed]);\r\n\r\n\r\n//     let wheelId;\r\n\r\n//     const handleWheel = useCallback((e) => {\r\n//         e.preventDefault();\r\n//         setIsWheel(false)\r\n//         // Calculate scroll amount based on mouseScrollStep\r\n//         const delta = Math.sign(e.deltaY) * mouseScrollStep;\r\n\r\n//         // Update target position\r\n//         targetScroll.current += delta;\r\n\r\n//         // Keep within document bounds\r\n//         // targetScroll.current = Math.max(\r\n//         //   0,\r\n//         //   Math.min(\r\n//         //     targetScroll.current,\r\n//         //     document.body.scrollHeight - window.innerHeight\r\n//         //   )\r\n//         // );\r\n//         const maxScroll = document.documentElement.scrollHeight - window.innerHeight;\r\n//         targetScroll.current = Math.max(\r\n//             0,\r\n//             Math.min(targetScroll.current, maxScroll)\r\n//         );\r\n\r\n//         if (!isScrolling.current) {\r\n//             isScrolling.current = true;\r\n//         }\r\n\r\n\r\n\r\n//         wheelId = setTimeout(() => {\r\n//             setIsWheel(true);\r\n//         }, 500);\r\n\r\n//     }, [mouseScrollStep]);\r\n\r\n//     const handleScroll = useCallback((e) => {\r\n//         if (isScrolling.current) {\r\n//             e.preventDefault();\r\n//             window.scrollTo(0, currentScroll.current);\r\n//         }\r\n//     }, []);\r\n\r\n//     // Function to handle thumb dragging and update position\r\n//     const handleThumbDrag = (clientY) => {\r\n//         // 1. Get current metrics\r\n//         const totalScrollableHeight = html.scrollHeight - html.clientHeight;\r\n//         if (totalScrollableHeight <= 0) return; // No scrolling needed\r\n\r\n//         // 2. Calculate drag distance and scroll ratio\r\n//         const dragDistanceY = clientY - startY.current;\r\n//         const availableTrackHeight = html.clientHeight - thumbHeight;\r\n\r\n//         // 3. Calculate new scroll position with boundaries\r\n//         const scrollRatio = dragDistanceY / availableTrackHeight;\r\n//         const unboundedScrollTop = startScrollTop.current + (scrollRatio * totalScrollableHeight);\r\n//         const boundedScrollTop = Math.max(0, Math.min(unboundedScrollTop, totalScrollableHeight));\r\n\r\n//         // 4. Update scroll position immediately\r\n//         html.scrollTop = boundedScrollTop;\r\n\r\n//         // 5. Calculate and set thumb position\r\n//         const scrollProgress = boundedScrollTop / totalScrollableHeight;\r\n//         const newThumbPosition = scrollProgress * availableTrackHeight;\r\n\r\n//         // Use direct assignment if possible, or ensure setThumbPosition is synchronous\r\n//         // thumbRef.current.style.top= `${newThumbPosition}px`;\r\n//         // Alternatively:\r\n//         setThumbPosition(newThumbPosition);\r\n//     };\r\n\r\n//     useEffect(() => {\r\n//         setIsActive(isShowScrollbar);\r\n//         if (!isShowScrollbar) return;\r\n//         html.classList.add('csb-scrollbar-active');\r\n\r\n//         const updateScrollbar = (e) => {\r\n//             handleScroll(e)\r\n//             if (!thumbRef.current) return;\r\n\r\n//             const scrollableHeight = html.scrollHeight - html.clientHeight;\r\n//             if (scrollableHeight <= 0) return;\r\n\r\n//             // Calculate thumb height (minimum 20px)\r\n//             const newThumbHeight = Math.max(\r\n//                 (html.clientHeight / html.scrollHeight) * html.clientHeight,\r\n//                 20\r\n//             );\r\n//             setThumbHeight(newThumbHeight);\r\n\r\n//             // Update thumb position\r\n//             const scrollPercentage = html.scrollTop / scrollableHeight;\r\n//             const maxThumbPosition = html.clientHeight - newThumbHeight;\r\n//             setThumbPosition(scrollPercentage * maxThumbPosition);\r\n//         };\r\n\r\n//         const handleMouseMove = (e) => {\r\n//             // e.preventDefault();\r\n//             if (!isDragging || !thumbRef?.current || !isDrag) return;\r\n//             handleThumbDrag(e.clientY);\r\n//         };\r\n\r\n//         const handleMouseUp = () => {\r\n//             setIsDragging(false);\r\n//             document.body.style.cursor = '';\r\n//             document.body.style.userSelect = '';\r\n\r\n//         };\r\n\r\n//         const handleMouseClick = (e) => {\r\n\r\n//             e.preventDefault();\r\n//             if (!railRef.current || !thumbRef.current || !isClick) return;\r\n\r\n//             const scrollableHeight = html.scrollHeight - html.clientHeight;\r\n//             if (scrollableHeight <= 0) return;\r\n\r\n//             const viewportHeight = html.clientHeight;\r\n//             const currentScrollTop = html.scrollTop;\r\n//             const thumbRect = thumbRef.current.getBoundingClientRect();\r\n\r\n//             let newScrollTop;\r\n\r\n//             if (e.clientY < thumbRect.top) {\r\n//                 // Clicked above the thumb, scroll up by one page (100dvh)\r\n//                 newScrollTop = currentScrollTop - viewportHeight;\r\n//             } else if (e.clientY > thumbRect.bottom) {\r\n//                 // Clicked below the thumb, scroll down by one page (100dvh)\r\n//                 newScrollTop = currentScrollTop + viewportHeight;\r\n//             } else {\r\n//                 // Clicked on the thumb itself, do nothing.\r\n//                 return;\r\n//             }\r\n\r\n//             // Clamp the new scroll position to stay within the valid range.\r\n//             const boundedScrollTop = Math.max(0, Math.min(newScrollTop, scrollableHeight));\r\n//             window.scrollTo({\r\n//                 top: boundedScrollTop,\r\n//                 behavior: 'smooth',\r\n//             });\r\n//         };\r\n\r\n//         // Initial setup\r\n//         updateScrollbar();\r\n//         window.addEventListener('resize', updateScrollbar);\r\n//         window.addEventListener('scroll', updateScrollbar,{ passive: false });\r\n\r\n//         // Drag events\r\n//         thumbRef.current?.addEventListener('mousedown', (e) => {\r\n//             e.stopPropagation();\r\n//             setIsDragging(true);\r\n//             startY.current = e.clientY;\r\n//             startScrollTop.current = html.scrollTop;\r\n//             // document.body.style.cursor = 'grabbing';\r\n//             document.body.style.userSelect = 'none';\r\n//         });\r\n\r\n\r\n//         const handleThumbClick = (e) => {\r\n//             e.stopPropagation();\r\n//         }\r\n//         // click event on the rail\r\n//         railRef?.current?.addEventListener('click', handleMouseClick);\r\n//         thumbRef.current?.addEventListener('click', handleThumbClick);\r\n\r\n//         // Initialize scroll positions\r\n//         targetScroll.current = window.pageYOffset;\r\n//         currentScroll.current = window.pageYOffset;\r\n\r\n//         // Start animation loop\r\n//         animationFrameId.current = requestAnimationFrame(animate);\r\n\r\n//         // Add event listeners\r\n//         window.addEventListener('wheel', handleWheel, { passive: false });\r\n\r\n//         document.addEventListener('mousemove', handleMouseMove);\r\n//         document.addEventListener('mouseup', handleMouseUp);\r\n//         window.addEventListener('load', () => {\r\n//             updateScrollbar();\r\n//             setIsLoading(false);\r\n//         });\r\n\r\n//         return () => {\r\n//             html.classList.remove('csb-scrollbar-active');\r\n//             window.removeEventListener('resize', updateScrollbar);\r\n//             window.removeEventListener('scroll', updateScrollbar);\r\n//             document.removeEventListener('mousemove', handleMouseMove);\r\n//             document.removeEventListener('mouseup', handleMouseUp);\r\n//             window.removeEventListener('load', updateScrollbar);\r\n//             railRef?.current?.removeEventListener('click', handleMouseClick)\r\n//             thumbRef.current?.removeEventListener('click', handleThumbClick);\r\n//             // if (wheelStep) {\r\n//             // document.removeEventListener('wheel', handleWheel);\r\n//             // }\r\n//             if (animationFrameId.current) {\r\n//                 cancelAnimationFrame(animationFrameId.current);\r\n//             }\r\n//             window.removeEventListener('wheel', handleWheel);\r\n//             isScrolling.current = false;\r\n//             clearTimeout(wheelId);\r\n//         };\r\n//     }, [isLoading, isShowScrollbar, railRef.current, thumbRef.current, thumbHeight, isDragging]);\r\n//     return { isLoading, isActive, thumbHeight, thumbPosition, isDragging, isWheel };\r\n// };\r\n\r\n\r\nimport { useCallback, useEffect, useRef, useState } from \"react\";\r\n\r\nexport const useScrollbar = (\r\n    railRef = null,\r\n    thumbRef = null,\r\n    isShowScrollbar = false,\r\n    mouseScrollStep = 40,\r\n    scrollSpeed = 60,\r\n) => {\r\n    const [isActive, setIsActive] = useState(false);\r\n    const [isDragging, setIsDragging] = useState(false);\r\n    const [thumbHeight, setThumbHeight] = useState(0);\r\n    const [thumbPosition, setThumbPosition] = useState(0);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [isWheel, setIsWheel] = useState(true);\r\n\r\n    const html = document.documentElement;\r\n    const startY = useRef(0);\r\n    const startScrollTop = useRef(0);\r\n    const animationFrameId = useRef();\r\n    const targetScroll = useRef(0);\r\n    const currentScroll = useRef(0);\r\n    const isScrolling = useRef(false);\r\n    const wheelTimeout = useRef();\r\n\r\n    // Update thumb position based on current scroll\r\n    const updateThumbPosition = useCallback(() => {\r\n        if (!thumbRef?.current) return;\r\n\r\n        const scrollableHeight = html.scrollHeight - html.clientHeight;\r\n        if (scrollableHeight <= 0) return;\r\n\r\n        // Calculate thumb height (minimum 20px)\r\n        const newThumbHeight = Math.max(\r\n            (html.clientHeight / html.scrollHeight) * html.clientHeight,\r\n            20\r\n        );\r\n        setThumbHeight(newThumbHeight);\r\n\r\n        // Update thumb position based on current scroll\r\n        const scrollPercentage = currentScroll.current / scrollableHeight;\r\n        const maxThumbPosition = html.clientHeight - newThumbHeight;\r\n        const newPosition = scrollPercentage * maxThumbPosition;\r\n\r\n        setThumbPosition(newPosition);\r\n    }, [html, thumbRef]);\r\n\r\n    // Smooth scroll animation\r\n    const animate = useCallback(() => {\r\n        if (isScrolling.current) {\r\n            const difference = targetScroll.current - currentScroll.current;\r\n\r\n            // Adjusted speed calculation:\r\n            // - Higher scrollSpeed (>60) = slower, smoother (smaller steps)\r\n            // - Lower scrollSpeed (<60) = faster, less smooth (larger steps)\r\n            const speedFactor = scrollSpeed / 60; // Normalize to 1.0 at 60\r\n            const step = difference * (0.1 / speedFactor); // Inverse relationship\r\n\r\n            currentScroll.current += step;\r\n\r\n            window.scrollTo(0, currentScroll.current);\r\n            updateThumbPosition();\r\n\r\n            if (Math.abs(difference) < 1) {\r\n                currentScroll.current = targetScroll.current;\r\n                window.scrollTo(0, currentScroll.current);\r\n                isScrolling.current = false;\r\n            }\r\n        }\r\n\r\n        animationFrameId.current = requestAnimationFrame(animate);\r\n    }, [scrollSpeed, updateThumbPosition]);\r\n\r\n    // Wheel event handler\r\n    const handleWheel = useCallback((e) => {\r\n        e.preventDefault();\r\n        setIsWheel(false);\r\n\r\n        // Calculate scroll amount based on mouseScrollStep\r\n        const delta = Math.sign(e.deltaY) * mouseScrollStep;\r\n\r\n        // Update target position\r\n        targetScroll.current += delta;\r\n\r\n        // Keep within document bounds\r\n        const maxScroll = html.scrollHeight - window.innerHeight;\r\n        targetScroll.current = Math.max(0, Math.min(targetScroll.current, maxScroll));\r\n\r\n        if (!isScrolling.current) {\r\n            isScrolling.current = true;\r\n        }\r\n\r\n        // Clear any existing timeout\r\n        if (wheelTimeout.current) {\r\n            clearTimeout(wheelTimeout.current);\r\n        }\r\n\r\n        // Set timeout to reset wheel state\r\n        wheelTimeout.current = setTimeout(() => {\r\n            setIsWheel(true);\r\n        }, 500);\r\n\r\n    }, [mouseScrollStep, html]);\r\n\r\n    // Handle thumb dragging\r\n    const handleThumbDrag = useCallback((clientY) => {\r\n        const totalScrollableHeight = html.scrollHeight - html.clientHeight;\r\n        if (totalScrollableHeight <= 0) return;\r\n\r\n        const dragDistanceY = clientY - startY.current;\r\n        const availableTrackHeight = html.clientHeight - thumbHeight;\r\n        const scrollRatio = dragDistanceY / availableTrackHeight;\r\n\r\n        const unboundedScrollTop = startScrollTop.current + (scrollRatio * totalScrollableHeight);\r\n        const boundedScrollTop = Math.max(0, Math.min(unboundedScrollTop, totalScrollableHeight));\r\n\r\n        // Update both scroll position and thumb position\r\n        html.scrollTop = boundedScrollTop;\r\n        currentScroll.current = boundedScrollTop;\r\n        targetScroll.current = boundedScrollTop;\r\n\r\n        const scrollProgress = boundedScrollTop / totalScrollableHeight;\r\n        const newThumbPosition = scrollProgress * availableTrackHeight;\r\n        setThumbPosition(newThumbPosition);\r\n    }, [html, thumbHeight]);\r\n\r\n    useEffect(() => {\r\n        setIsActive(isShowScrollbar);\r\n        if (!isShowScrollbar) return;\r\n        html.classList.add('csb-scrollbar-active');\r\n\r\n        const updateScrollbar = () => {\r\n            if (!thumbRef?.current) return;\r\n\r\n            const scrollableHeight = html.scrollHeight - html.clientHeight;\r\n            if (scrollableHeight <= 0) return;\r\n\r\n            // Update thumb dimensions and position\r\n            const newThumbHeight = Math.max(\r\n                (html.clientHeight / html.scrollHeight) * html.clientHeight,\r\n                20\r\n            );\r\n            setThumbHeight(newThumbHeight);\r\n\r\n            const scrollPercentage = html.scrollTop / scrollableHeight;\r\n            const maxThumbPosition = html.clientHeight - newThumbHeight;\r\n            setThumbPosition(scrollPercentage * maxThumbPosition);\r\n        };\r\n\r\n        const handleMouseMove = (e) => {\r\n            if (!isDragging || !thumbRef?.current) return;\r\n            handleThumbDrag(e.clientY);\r\n        };\r\n\r\n        const handleMouseUp = () => {\r\n            setIsDragging(false);\r\n            document.body.style.userSelect = '';\r\n        };\r\n\r\n        const handleRailClick = (e) => {\r\n            e.preventDefault();\r\n            if (!railRef.current || !thumbRef.current) return;\r\n\r\n            const scrollableHeight = html.scrollHeight - html.clientHeight;\r\n            if (scrollableHeight <= 0) return;\r\n\r\n            const viewportHeight = html.clientHeight;\r\n            const currentScrollTop = html.scrollTop;\r\n            const thumbRect = thumbRef.current.getBoundingClientRect();\r\n\r\n            let newScrollTop;\r\n            if (e.clientY < thumbRect.top) {\r\n                newScrollTop = currentScrollTop - viewportHeight;\r\n            } else if (e.clientY > thumbRect.bottom) {\r\n                newScrollTop = currentScrollTop + viewportHeight;\r\n            } else {\r\n                return;\r\n            }\r\n\r\n            const boundedScrollTop = Math.max(0, Math.min(newScrollTop, scrollableHeight));\r\n            targetScroll.current = boundedScrollTop;\r\n            isScrolling.current = true;\r\n        };\r\n\r\n        // Initial setup\r\n        updateScrollbar();\r\n        targetScroll.current = window.pageYOffset;\r\n        currentScroll.current = window.pageYOffset;\r\n\r\n        // Start animation loop immediately\r\n        animationFrameId.current = requestAnimationFrame(animate);\r\n\r\n        // Event listeners\r\n        window.addEventListener('resize', updateScrollbar);\r\n        window.addEventListener('scroll', updateScrollbar);\r\n        window.addEventListener('wheel', handleWheel, { passive: false });\r\n        document.addEventListener('mousemove', handleMouseMove);\r\n        document.addEventListener('mouseup', handleMouseUp);\r\n\r\n        if (thumbRef.current) {\r\n            thumbRef.current.addEventListener('mousedown', (e) => {\r\n                e.stopPropagation();\r\n                setIsDragging(true);\r\n                startY.current = e.clientY;\r\n                startScrollTop.current = html.scrollTop;\r\n                document.body.style.userSelect = 'none';\r\n            });\r\n\r\n            thumbRef.current.addEventListener('click', (e) => {\r\n                e.stopPropagation();\r\n            });\r\n        }\r\n\r\n        if (railRef.current) {\r\n            railRef.current.addEventListener('click', handleRailClick);\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            updateScrollbar();\r\n            setIsLoading(false);\r\n        });\r\n\r\n\r\n\r\n        // In the cleanup function of useEffect:\r\n        return () => {\r\n            html.classList.remove('csb-scrollbar-active');\r\n            window.removeEventListener('resize', updateScrollbar);\r\n            window.removeEventListener('scroll', updateScrollbar);\r\n            window.removeEventListener('wheel', handleWheel);\r\n            document.removeEventListener('mousemove', handleMouseMove);\r\n            document.removeEventListener('mouseup', handleMouseUp);\r\n            window.removeEventListener('load', updateScrollbar);\r\n\r\n            // Fix for thumbRef event listeners\r\n            // if (thumbRef.current) {\r\n                // const thumbElement = thumbRef.current;\r\n                // thumbElement.removeEventListener('mousedown', handleThumbMouseDown);\r\n                // thumbElement.removeEventListener('click', handleThumbClick);\r\n            // }\r\n\r\n            if (railRef.current) {\r\n                railRef.current.removeEventListener('click', handleRailClick);\r\n            }\r\n\r\n            if (animationFrameId.current) {\r\n                cancelAnimationFrame(animationFrameId.current);\r\n            }\r\n\r\n            if (wheelTimeout.current) {\r\n                clearTimeout(wheelTimeout.current);\r\n            }\r\n\r\n            isScrolling.current = false;\r\n        };\r\n    }, [ isShowScrollbar, html, thumbRef, railRef, isDragging, handleWheel, handleThumbDrag, animate ]);\r\n\r\n    return { isLoading, isActive, thumbHeight, thumbPosition, isDragging, isWheel };\r\n};","export const isSet = v => v !== undefined && v !== null && v !== '';","// extracted by mini-css-extract-plugin\nexport {};","'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","module.exports = window[\"React\"];","module.exports = window[\"ReactDOM\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { useEffect, useRef } from 'react';\r\nimport { createRoot } from 'react-dom/client';\r\nimport { useScrollbar } from '../hooks/useScrollbar';\r\n// import { useSmoothScroll } from '../hooks/useSmoothScroll';\r\nimport { isSet } from '../utils/function';\r\nimport \"./style.scss\";\r\nconst Scrollbar = ({ scrollbarData }) => {\r\n    const { asb_showscrollbar, asb_color = '', asb_background = '', asb_mousescrollstep = 40, asb_autohidemode = false, asb_railalign = \"right\", asb_scrollspeed=60 } = scrollbarData;\r\n    // console.log(scrollbarData)\r\n    const thumbRef = useRef(null);\r\n    const railRef = useRef(null);\r\n    const showScrollbar = JSON.parse(asb_showscrollbar);\r\n\r\n    const autoHideMode = asb_autohidemode === \"coursor\" ? \"coursor\" : JSON.parse(asb_autohidemode);\r\n\r\n    const { isWheel, isLoading, thumbHeight, thumbPosition } = useScrollbar(railRef, thumbRef, showScrollbar, Number(asb_mousescrollstep), Number(asb_scrollspeed));\r\n    // const { isWheel } = useSmoothScroll({\r\n    //     scrollSpeed: Number(asb_scrollspeed),    // Normal scrolling speed\r\n    //     mouseScrollStep: Number(asb_mousescrollstep) // Pixels per mouse wheel step\r\n    // });\r\n    useEffect(() => {\r\n        if (window.self === window.top && showScrollbar) {\r\n            document.documentElement.classList.add('csb-scrollbar-active');\r\n        } else {\r\n            document.documentElement.classList.remove('csb-scrollbar-active');\r\n        }\r\n\r\n        // Cleanup function to remove the class when the component unmounts\r\n        return () => {\r\n            document.documentElement.classList.remove('csb-scrollbar-active');\r\n        };\r\n    }, [showScrollbar]);\r\n\r\n    const styles = {\r\n        ...(showScrollbar && { \"--csb-scrollbar-rail-display-property\": 'block' }),\r\n        ...(isSet(asb_background) && { \"--csb-scrollbar-rail-background-color\": asb_background }),\r\n\r\n\r\n    };\r\n    const thumbStyles = {\r\n        ...(isSet(thumbHeight) && { \"--csb-scrollbar-thumb-height\": thumbHeight + \"px\" }),\r\n        ...(isSet(thumbPosition) && { \"--csb-scrollbar-thumb-position\": thumbPosition + \"px\" }),\r\n        ...(isSet(asb_color) && { \"--csb-scrollbar-thumb-color\": asb_color }),\r\n    }\r\n\r\n    // const dynamicClassRail = autoHideMode === \"cursor\" ? \"csb-scrollbar-rail-cursor\" : autoHideMode ? isWheel ?\"csb-scrollbar-auto-hide\":\"\":\"\"\r\n\r\n    let dynamicClassRail = '';\r\n    if (autoHideMode == 'coursor') {\r\n        // This class shows the scrollbar on hover\r\n        dynamicClassRail = 'csb-scrollbar-rail-cursor-hover';\r\n    } else if (autoHideMode) {\r\n\r\n        // This class hides the scrollbar when not actively wheel-scrolling\r\n        dynamicClassRail = 'csb-scrollbar-auto-hide';\r\n    }\r\n\r\n\r\n    if (isLoading) return;\r\n\r\n    return (\r\n        <div ref={railRef} className={`csb-scrollbar-rail railAlign${asb_railalign} ${isWheel ? dynamicClassRail : \"\"}`} style={{ ...styles }}>\r\n            <div className='csb-scrollbar-rail-thumb' ref={thumbRef} style={{ ...thumbStyles }} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Scrollbar;\r\n\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n    const scrollbarEl = document.getElementById(\"csbScrollbar\");\r\n    const scrollbarData = JSON.parse(scrollbarEl.dataset.scrollbar);\r\n    const root = createRoot(scrollbarEl);\r\n    root.render(<Scrollbar scrollbarData={scrollbarData} />);\r\n    scrollbarEl.removeAttribute('data-scrollbar')\r\n});\r\n\r\n\r\n\r\n"],"names":["useCallback","useEffect","useRef","useState","useScrollbar","railRef","thumbRef","isShowScrollbar","mouseScrollStep","scrollSpeed","isActive","setIsActive","isDragging","setIsDragging","thumbHeight","setThumbHeight","thumbPosition","setThumbPosition","isLoading","setIsLoading","isWheel","setIsWheel","html","document","documentElement","startY","startScrollTop","animationFrameId","targetScroll","currentScroll","isScrolling","wheelTimeout","updateThumbPosition","current","scrollableHeight","scrollHeight","clientHeight","newThumbHeight","Math","max","scrollPercentage","maxThumbPosition","newPosition","animate","difference","speedFactor","step","window","scrollTo","abs","requestAnimationFrame","handleWheel","e","preventDefault","delta","sign","deltaY","maxScroll","innerHeight","min","clearTimeout","setTimeout","handleThumbDrag","clientY","totalScrollableHeight","dragDistanceY","availableTrackHeight","scrollRatio","unboundedScrollTop","boundedScrollTop","scrollTop","scrollProgress","newThumbPosition","classList","add","updateScrollbar","handleMouseMove","handleMouseUp","body","style","userSelect","handleRailClick","viewportHeight","currentScrollTop","thumbRect","getBoundingClientRect","newScrollTop","top","bottom","pageYOffset","addEventListener","passive","stopPropagation","remove","removeEventListener","cancelAnimationFrame","isSet","v","undefined","createRoot","Scrollbar","scrollbarData","asb_showscrollbar","asb_color","asb_background","asb_mousescrollstep","asb_autohidemode","asb_railalign","asb_scrollspeed","showScrollbar","JSON","parse","autoHideMode","Number","self","styles","thumbStyles","dynamicClassRail","createElement","ref","className","scrollbarEl","getElementById","dataset","scrollbar","root","render","removeAttribute"],"sourceRoot":""}